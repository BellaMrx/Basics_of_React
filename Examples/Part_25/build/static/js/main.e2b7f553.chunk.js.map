{"version":3,"sources":["songListService.js","Songs.jsx","App.js","reportWebVitals.js","index.js"],"names":["songs","_id","song","interpreter","genre","Button","styled","button","Tabelle","table","props","width","Songs","React","useState","setSongs","Fragment","playlist","map","style","textAlign","onClick","newsongs","filter","s","handleRemoveSong","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAMA,EAAQ,CAAC,CACPC,IAAK,KACLC,KAAM,sBACNC,YAAa,KACbC,MAAO,OAEX,CACIH,IAAK,KACLC,KAAM,UACNC,YAAa,WACbC,MAAO,YAEX,CACIH,IAAK,KACLC,KAAM,QACNC,YAAa,QACbC,MAAO,QAEX,CACIH,IAAK,KACLC,KAAM,gBACNC,YAAa,gBACbC,MAAO,OAEX,CACIH,IAAK,KACLC,KAAM,iBACNC,YAAa,WACbC,MAAO,UAEX,CACIH,IAAK,KACLC,KAAM,sBACNC,YAAa,KACbC,MAAO,OAEX,CACIH,IAAK,KACLC,KAAM,mBACNC,YAAa,aACbC,MAAO,QAEX,CACIH,IAAK,KACLC,KAAM,oBACNC,YAAa,mBACbC,MAAO,iBAEX,CACIH,IAAK,KACLC,KAAM,SACNC,YAAa,OACbC,MAAO,S,04BC/Cf,IAAMC,EAASC,IAAOC,OAAV,KAkBNC,EAAUF,IAAOG,MAAV,KACF,SAACC,GAAD,OAAYA,EAAMC,MAAQD,EAAMC,MAAQ,SA8DpCC,EAtCD,SAACF,GAAW,IAAD,EACGG,IAAMC,SDSvBd,GCVc,mBAChBA,EADgB,KACTe,EADS,KAQvB,OACF,eAAC,IAAMC,SAAP,WACM,+BAAKN,EAAMO,SAAX,iBACA,eAACT,EAAD,CAASG,MAAM,MAAf,UACE,gCACE,+BACE,sCACA,6CACA,uCACA,4BAGJ,gCACGX,EAAMkB,KAAI,SAAChB,GAAD,OACT,+BACE,6BAAKA,EAAKA,OACV,6BAAKA,EAAKC,cACV,6BAAKD,EAAKE,QACV,oBAAIe,MAAO,CAAEC,UAAW,UAAxB,SACE,cAACf,EAAD,CAAQgB,QAAS,kBAxBN,SAACnB,GACxB,IAAMoB,EAAWtB,EAAMuB,QAAO,SAACC,GAAD,OAAOA,EAAEvB,MAAQC,EAAKD,OACpDc,EAASO,GAsB0BG,CAAiBvB,IAAxC,2BALKA,EAAKD,iBC3DXyB,EARH,WACV,OACE,cAAC,IAAMV,SAAP,UACE,cAAC,EAAD,CAAOC,SAAW,iBCMTU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e2b7f553.chunk.js","sourcesContent":["const songs = [{\r\n        _id: 1234,\r\n        song: \"With Or Without You\",\r\n        interpreter: \"U2\",\r\n        genre: \"Pop\",\r\n    },\r\n    {\r\n        _id: 1235,\r\n        song: \"Politik\",\r\n        interpreter: \"Coldplay\",\r\n        genre: \"Pop-Rock\",\r\n    },\r\n    {\r\n        _id: 1236,\r\n        song: \"Waves\",\r\n        interpreter: \"Melua\",\r\n        genre: \"Rock\",\r\n    },\r\n    {\r\n        _id: 1237,\r\n        song: \"Strangers Now\",\r\n        interpreter: \"The Slow Show\",\r\n        genre: \"Pop\",\r\n    },\r\n    {\r\n        _id: 1238,\r\n        song: \"Buddha on Acid\",\r\n        interpreter: \"Klanglos\",\r\n        genre: \"Techno\",\r\n    },\r\n    {\r\n        _id: 1239,\r\n        song: \"With Or Without You\",\r\n        interpreter: \"U2\",\r\n        genre: \"Pop\",\r\n    },\r\n    {\r\n        _id: 1240,\r\n        song: \"I Am the Highway\",\r\n        interpreter: \"Audioslave\",\r\n        genre: \"Rock\",\r\n    },\r\n    {\r\n        _id: 1241,\r\n        song: \"Dormir Soñando\",\r\n        interpreter: \"El Gran Silencio\",\r\n        genre: \"Spanisch Rock\",\r\n    },\r\n    {\r\n        _id: 1242,\r\n        song: \"Schism\",\r\n        interpreter: \"TOOL\",\r\n        genre: \"Rock\",\r\n    },\r\n\r\n];\r\n\r\nexport function getPlaylist() {\r\n    return songs;\r\n}","import React, { Component } from \"react\";\r\nimport { getPlaylist } from \"./songListService\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Button = styled.button`\r\n  background-color: darkgrey;\r\n  border: none;\r\n  color: white;\r\n  padding: 12px 35px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n  transition-duration: 0.4s;\r\n  :hover {\r\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\r\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\r\n  }\r\n`;\r\n\r\nconst Tabelle = styled.table`\r\n  width: ${(props) => (props.width ? props.width : \"80%\")};\r\n  th {\r\n    padding: 0.5em;\r\n    text-transform: uppercase;\r\n    border-top: 1px solid black;\r\n    border-bottom: 1px solid black;\r\n    text-align: left;\r\n  }\r\n  tr:nth-child(even) {\r\n    background: lightgray;\r\n  }\r\n  td:nth-child(1) {\r\n    font-weight: bold;\r\n  }\r\n  td {\r\n    padding: 0.5em;\r\n  }\r\n  tr:hover {\r\n    background: rgb(212, 89, 85);\r\n    color: white;\r\n  }\r\n`;\r\n\r\n\r\nconst Songs = (props) => {\r\n  const [songs, setSongs] = React.useState(getPlaylist());\r\n\r\n  const handleRemoveSong = (song) => {\r\n    const newsongs = songs.filter((s) => s._id !== song._id);\r\n    setSongs(newsongs);\r\n  };\r\n\r\n  return (\r\n<React.Fragment>\r\n      <h2>{props.playlist}'s Playlist</h2>\r\n      <Tabelle width=\"95%\">\r\n        <thead>\r\n          <tr>\r\n            <th>Song</th>\r\n            <th>Interpreter</th>\r\n            <th>Genre</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {songs.map((song) => (\r\n            <tr key={song._id}>\r\n              <td>{song.song}</td>\r\n              <td>{song.interpreter}</td>\r\n              <td>{song.genre}</td>\r\n              <td style={{ textAlign: \"center\" }}>\r\n                <Button onClick={() => handleRemoveSong(song)}>\r\n                  Entfernen\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Tabelle>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Songs;\r\n","import React, { Component } from \"react\";\nimport Songs from \"./Songs\";\n\nconst App = () => {\n  return (\n    <React.Fragment >\n      <Songs playlist = \"Jürgen\" />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}