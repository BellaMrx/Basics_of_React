{"version":3,"sources":["useAlphaCounter.js","App.js","reportWebVitals.js","index.js"],"names":["useAlphaCounter","speed","useState","counter","setCounter","useEffect","intervall","setInterval","clearInterval","String","fromCharCode","App","counter_1","counter_2","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAaeA,MAXf,WAAwC,IAAfC,EAAc,uDAAN,IAAM,EACLC,mBAAS,GADJ,mBAC5BC,EAD4B,KACnBC,EADmB,KASnC,OAPAC,qBAAU,WACN,IAAMC,EAAYC,aAAY,WACPH,EAAfD,GAAW,GAAeA,EAAU,GACxBA,EAAU,KAC3BF,GACH,OAAO,kBAAMO,cAAcF,MAC5B,CAACH,IACGM,OAAOC,aAAa,GAAKP,ICErBQ,MAVf,WACI,IAAMC,EAAYZ,IACZa,EAAYb,EAAgB,KAClC,OACE,eAAC,IAAMc,SAAP,WACA,iDACE,kCAAMF,EAAN,IAAoBC,EAApB,WCGOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.88331dd0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction useAlphaCounter(speed = 1000) {\r\n    const [counter, setCounter] = useState(0);\r\n    useEffect(() => {\r\n        const intervall = setInterval(() => {\r\n            if (counter >= 25) setCounter(counter - 25);\r\n            else setCounter(counter + 1);\r\n        }, speed);\r\n        return () => clearInterval(intervall);\r\n    }, [counter]);\r\n    return String.fromCharCode(97 + counter);\r\n}\r\nexport default useAlphaCounter;","import React from \"react\";\nimport useAlphaCounter from \"./useAlphaCounter\";\n\nfunction App() {\n    const counter_1 = useAlphaCounter();\n    const counter_2 = useAlphaCounter(500);\n    return ( \n      <React.Fragment >\n      <h1 > Demonstration </h1>\n        <p> { counter_1 } { counter_2 } </p>\n      </React.Fragment>\n    );\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}