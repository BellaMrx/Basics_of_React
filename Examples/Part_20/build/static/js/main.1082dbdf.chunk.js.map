{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["appContext","React","createContext","Copyright","user","useContext","Fragment","href","email","name","Status","nickname","private","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAEMA,G,KAAaC,IAAMC,iBAoBnBC,EAAY,WACd,IAAMC,EAAOH,IAAMI,WAAWL,GAC9B,OACE,cAAC,IAAMM,SAAP,UACE,4CAAW,oBAAGC,KAAS,UAAYH,EAAKI,MAA7B,UACPJ,EAAKK,KADE,aAObC,EAAS,WACb,IAAMN,EAAOH,IAAMI,WAAWL,GAC9B,OACE,cAAC,IAAMM,SAAP,UACE,kCAAMF,EAAKO,SAAW,IAAtB,eAAyC,KAChB,IAAjBP,EAAKQ,QACA,sCAAU,iBAAV,OACA,sCAAUR,EAAKK,KAAf,aAMJI,EA1CH,WAOR,OACE,eAACb,EAAWc,SAAZ,CAAqBC,MAPZ,CACPJ,SAAU,UACVF,KAAM,iBACND,MAAO,aACPI,SAAS,GAGX,UACE,eAAC,IAAMN,SAAP,WACE,gEACA,cAAC,EAAD,IACA,cAAC,EAAD,OACgB,QCLXU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1082dbdf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst appContext = React.createContext();\n\nconst App = () => {\n    var user = {\n        nickname: \"woafu74\",\n        name: \"Jürgen Wolf\",\n        email: \"1@woafu.de\",\n        private: true,\n    };\n    return (\n      <appContext.Provider value = { user } >\n        <React.Fragment >\n          <h1> Demonstration von useContext </h1>\n          <Copyright />\n          <Status />\n        </React.Fragment>{\" \"} \n      </appContext.Provider>\n    );\n}\n\nconst Copyright = () => {\n    const user = React.useContext(appContext);\n    return ( \n      <React.Fragment >\n        <footer> © <a href = { \"mailto:\" + user.email } >\n          { user.name } < /a>\n        </footer> \n      </React.Fragment>\n    );\n}\n\nconst Status = () => {\n  const user = React.useContext(appContext);\n  return ( \n    <React.Fragment >\n      <p> { user.nickname + \" \" } ist online { \" \" }\n            { user.private === true \n               ? ( <small> { \"Name:Versteckt\" } </small> )\n               : ( <small> { user.name } </small> ) } \n      </p>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}